(window["webpackJsonpGUI"] = window["webpackJsonpGUI"] || []).push([["addon-entry-disable-paste-offset"],{

/***/ "./src/addons/addons/disable-paste-offset/_runtime_entry.js":
/*!******************************************************************!*\
  !*** ./src/addons/addons/disable-paste-offset/_runtime_entry.js ***!
  \******************************************************************/
/*! exports provided: resources */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resources", function() { return resources; });
/* harmony import */ var _userscript_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./userscript.js */ "./src/addons/addons/disable-paste-offset/userscript.js");
/* generated by pull.js */

var resources = {
  "userscript.js": _userscript_js__WEBPACK_IMPORTED_MODULE_0__["default"]
};

/***/ }),

/***/ "./src/addons/addons/disable-paste-offset/userscript.js":
/*!**************************************************************!*\
  !*** ./src/addons/addons/disable-paste-offset/userscript.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

/* harmony default export */ __webpack_exports__["default"] = (function (_x) {
  return _ref2.apply(this, arguments);
});

function _ref2() {
  _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref) {
    var addon, console;
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            addon = _ref.addon, console = _ref.console;
            addon.tab.redux.initialize();
            addon.tab.redux.addEventListener("statechanged", function (_ref3) {
              var detail = _ref3.detail;
              if (addon.self.disabled) return;

              if (detail.action.type === "scratch-paint/clipboard/SET" || detail.action.type === "scratch-paint/clipboard/INCREMENT_PASTE_OFFSET") {
                addon.tab.redux.dispatch({
                  type: "scratch-paint/clipboard/CLEAR_PASTE_OFFSET"
                });
              }
            });
            addon.self.addEventListener("disabled", function () {
              addon.tab.redux.dispatch({
                type: "scratch-paint/clipboard/CLEAR_PASTE_OFFSET"
              });
              addon.tab.redux.dispatch({
                type: "scratch-paint/clipboard/INCREMENT_PASTE_OFFSET"
              });
            });
            addon.self.addEventListener("reenabled", function () {
              addon.tab.redux.dispatch({
                type: "scratch-paint/clipboard/CLEAR_PASTE_OFFSET"
              });
            });

            if (addon.self.enabledLate) {
              addon.tab.redux.dispatch({
                type: "scratch-paint/clipboard/CLEAR_PASTE_OFFSET"
              });
            }

          case 6:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _ref2.apply(this, arguments);
}

/***/ })

}]);
//# sourceMappingURL=addon-entry-disable-paste-offset.js.map